<style lang="less">
@PADDING-LEFT: 20rpx;
.empty-car {
  display: flex;
  flex-direction: column;
  height: 500rpx;
  justify-content: center;
  align-items: center;
  image {
    width: 125rpx;
    height: 124rpx;
  }
  &-tips {
    margin-top: 30rpx;
    font-size: 28rpx;
    color: #666;
  }
  .extra {
    font-size: 24rpx;
    color: #999;
  }
}

.shop-head {
  background-color: #fff;
  height: 88rpx;
  display: flex;
  align-items: center;
  padding: 0 @PADDING-LEFT;
  border-bottom: 1px solid #ddd;
  &-info {
    display: flex;
    align-items: center;
    .shop-name {
      margin-left: 10rpx;
    }
  }
}

.goods-item {
  height: 220rpx;
  background-color: #fff;
  display: flex;
  align-items: center;
  padding-left: @PADDING-LEFT;
  border-bottom: 1px solid #eee;
  &-pic {
    width: 160rpx;
    height: 160rpx;
    margin-left: 10rpx;
    border: 1px solid #ddd;
    padding: 10rpx;
    border-radius: 5rpx;
    image {
      width: 100%;
      height: 100%;
    }
  }
  &-info {
    flex: 1;
    height: 180rpx;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    padding: 0rpx @PADDING-LEFT;
    &-title {
      color: #333;
      overflow: hidden;
      text-overflow: ellipsis;
      display: -webkit-box;
      -webkit-box-orient: vertical;
      -webkit-line-clamp: 2;
    }
    &-price {
      color: #ff2d4a;
      font-size: 30rpx;
    }
    &-edit {
      display: flex;
      justify-content: space-between;
      .outer {
        border: 1px solid #ddd;
        display: flex;
        align-items: center;
        border-radius: 5rpx;
        view {
          height: 50rpx;
          width: 50rpx;
          line-height: 50rpx;
          text-align: center;
        }
        .value {
          width: 65rpx;
          border-left: 1px solid #ddd;
        }
        .add {
          border-left: 1px solid #ddd;
        }
      }
    }
  }
}
.pubIcon {
  background: url(https://mcart.jiuxian.com/statics/images/cart/catIcon.png)
    no-repeat 0 0;
  background-size: 300rpx 300rpx;
  width: 55rpx;
  height: 55rpx;
}
.tureIcon {
  background-position: 0 -225rpx;
}
.falseIcon {
  background-position: -50rpx -225rpx;
}
.fixed-bar {
  display: flex;
  height: 98rpx;
  width: 750rpx;
  background-color: #fff;
  position: fixed;
  left: 0;
  bottom: 0;
  .allselect {
    padding-left: @PADDING-LEFT;
    width: 200rpx;
    height: 98rpx;
    display: flex;
    align-items: center;
  }
  .statistics {
    flex: 1;
    display: flex;
    // align-items: center;
    justify-content: center;
    flex-direction: column;
  }
  .jiesuan {
    width: 200rpx;
    height: 98rpx;
    background-color: #ff2d4a;
    color: #fff;
    text-align: center;
    line-height: 98rpx;
  }

  .disabled {
    background-color: #ddd;
  }
}
</style>
<template>
  <view>
    <view wx:if="{{isEmpty}}" class="empty-car">
      <image src="../images/kong.png" />
      <text class="empty-car-tips">购物车还是空的</text>
      <text class="empty-car-tips extra">快去逛逛吧~</text>
    </view>
    <view wx:else>
      <!-- 头部 -->
      <view class="shop-head">
        <view class="shop-head-info">
          <view class="iconfont icon-shop flex-center icon-dianpu"></view>
          <text class="shop-name">品优购生活馆</text>
        </view>
      </view>
      <!-- 商品列表 -->
      <block wx:for="{{goodsList}}" wx:key="{{item.goods_id}}">
        <view class="goods-item">
          <view @tap="toggleSelect({{index}})" class="pubIcon {{item.isSelected?'tureIcon':'falseIcon'}}">
          </view>
          <view class="goods-item-pic">
            <image src="{{item.goods_small_logo}}" />
          </view>
          <view class="goods-item-info">
            <text class="goods-item-info-title">{{item.goods_name}}</text>
            <text class="goods-item-info-price">￥{{item.goods_price}}</text>
            <view class="goods-item-info-edit">
              <view class="outer">
                <view @tap="substrict({{index}})">-</view>
                <view class="value"><input value="{{item.goodsCount}}" type="number" /></view>
                <view @tap="add({{index}})" class="add">+</view>
              </view>
              <text @tap="deleteGoodsById({{index}})">| 删除</text>
            </view>
          </view>
        </view>
      </block>
      <!-- 底部菜单栏 -->
      <view hidden="{{isEmpty}}" class="fixed-bar">
        <view @tap="toggleAllSelect" class="allselect">
          <view class="pubIcon {{allSelected?'tureIcon':'falseIcon'}}">
          </view>
          <text style="margin-left:10rpx;">全选</text>
        </view>
        <view class="statistics">
          <view>
            <text>合计：</text>
            <text style="color:#ff2d4a;font-size:30rpx;">￥{{getTotalAmount}}</text>
          </view>
          <text>包含运费</text>
        </view>
        <view @tap="goToOrder" class="jiesuan {{getTotalCount===0?'disabled':''}}">
          <text>去结算 ({{getTotalCount}})</text>
        </view>
      </view>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy'

import { getLocalGoods, updateLocalGoods, deleteGoodsById } from '../utils/storageHelper'

import https from '../utils/https'

export default class Shopcart extends wepy.page {
  config = {
    navigationBarTitleText: '购物车'
  }

  data = {
    isEmpty: true, // 是否为空
    allSelected: true, // 是否全选
    goodsList: []
  }

  computed = {
    getTotalCount() {
      let totalCount = 0
      this.goodsList.forEach(item => {
        if (item.isSelected) {
          totalCount += item.goodsCount
        }
      })

      return totalCount
    },
    getTotalAmount() {
      let totalAmount = 0
      this.goodsList.forEach(item => {
        if (item.isSelected) {
          totalAmount += item.goodsCount * item.goods_price
        }
      })

      return totalAmount
    }
  }

  // 非组件触发的事件
  notify(index) {
    // 拿到要更改的对象
    const goods = this.goodsList[index]

    updateLocalGoods({
      goodsId: goods.goods_id,
      count: goods.goodsCount
    })
  }

  methods = {
    substrict(index) {
      if (this.goodsList[index].goodsCount <= 1) return
      this.goodsList[index].goodsCount--
      this.notify(index)
    },
    add(index) {
      this.goodsList[index].goodsCount++
      this.notify(index)
    },
    deleteGoodsById(index) {
      wepy
        .showModal({
          title: '提示',
          content: '确定删除吗?'
        })
        .then(res => {
          if (res.confirm) {
            // 拿到要删除的对象
            const goods = this.goodsList[index]
            deleteGoodsById(goods.goods_id)

            // 删除goodsList当中的
            this.goodsList.splice(index, 1)
            if(this.goodsList.length == 0 ) {
              this.isEmpty = true
            }else{
              this.isEmpty = false
            }
            this.$apply()
          } else if (res.cancel) {
            console.log('用户点击取消')
          }
        })
    },
    toggleSelect(index) {
      this.goodsList[index].isSelected = !this.goodsList[index].isSelected

      this.checkIsAllSelected()
    },
    toggleAllSelect() {
      this.allSelected = !this.allSelected

      this.goodsList.forEach(item => {
        item.isSelected = this.allSelected
      })
    },
    goToOrder() {
      let tempArray = []
      this.goodsList.forEach(item => {
        if (item.isSelected) {
          tempArray.push(item.goods_id)
        }
      })
      if (tempArray.length === 0) return

      // 编程式导航跳转到下单页面
      wepy.navigateTo({ url: `/pages/order?goods_ids=${tempArray.join(',')}` })
    }
  }

  checkIsAllSelected() {
    let isAllSelected = true
    this.goodsList.forEach(item => {
      if (!item.isSelected) {
        isAllSelected = false
      }
    })

    this.allSelected = isAllSelected
  }

  async getGoodsListData(localGoods, ids) {
    const result = await https({
      url: `goods/goodslist`,
      data: {
        goods_ids: ids
      }
    })

    this.goodsList = result.data.message

    this.goodsList.forEach(item => {
      item.isSelected = true
      item.goodsCount = localGoods[item.goods_id]
    })

    this.$apply()
  }

  onShow() {
    const localGoods = getLocalGoods()

    const tempArray = []
    for (const key in localGoods) {
      tempArray.push(key)
    }

    if (tempArray.length === 0) {
      return false
    }

    this.isEmpty = false

    this.getGoodsListData(localGoods, tempArray.join(','))
  }
}
</script>
